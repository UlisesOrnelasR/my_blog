<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Blog &lt;Ulises_Ornelas/></title><link>https://ulisesornelasr.github.io/my_blog/posts/</link><description>Recent content in Posts on Blog &lt;Ulises_Ornelas/></description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ulisesornelasr.github.io/my_blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>3.- Solucionando conflictos entre el Testing y Eslint</title><link>https://ulisesornelasr.github.io/my_blog/posts/testandeslint/</link><pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/testandeslint/</guid><description>&lt;p>En este post resolveremos los conflictos que tenemos, ya que al a√±adir EsLint surgen inconvenientes con el Testing&amp;hellip;&lt;/p></description></item><item><title>2.- Integrar Testing a tu proyecto de React JS con Jest y React Testing Library</title><link>https://ulisesornelasr.github.io/my_blog/posts/unittesting/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/unittesting/</guid><description>&lt;p>En esta publicaci√≥n veremos como integrar pruebas de unidad a nuestro proyecto de React JS, utilizando &lt;a href="https://jestjs.io/">JEST&lt;/a>üÉè y &lt;a href="https://testing-library.com/">React Testing Library&lt;/a>üêô&amp;hellip;&lt;/p></description></item><item><title>1.- Crear un proyecto de React con VITE, y configurar ESLINT y PRETTIER</title><link>https://ulisesornelasr.github.io/my_blog/posts/eslintprettier/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/eslintprettier/</guid><description>&lt;p>En este post usaremos &lt;a href="https://vitejs.dev/">VITE&lt;/a> para crear un proyecto de React, adem√°s de que configuraremos Eslint y Prettier correctamente para que no haya problemas al ejecutar sus comandos&amp;hellip;&lt;/p></description></item><item><title>Git: Comandos (git rebase, git merge)</title><link>https://ulisesornelasr.github.io/my_blog/posts/git8/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/git8/</guid><description>&lt;p>En este post veremos el uso de git rebase, un comando que nos ayuda a mover una rama, a otro punto del √°rbol, OJO este comando reescribe la historial de los commits ten cuidado al usarlo, tambi√©n veremos la diferencia entre usar este comando y git merge&amp;hellip;üê§&lt;/p></description></item><item><title>Git: Comandos (git checkout, git branch)</title><link>https://ulisesornelasr.github.io/my_blog/posts/git6/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/git6/</guid><description>&lt;p>Para trabajar en equipo no es suficiente con los comandos que hemos visto, en este post revisaremos los usos de &lt;em>git checkout&lt;/em> y &lt;em>git branch&lt;/em> para darnos cuenta de su importancia&amp;hellip;üê§&lt;/p></description></item><item><title>Git: Comandos (git fetch, git merge, git pull)</title><link>https://ulisesornelasr.github.io/my_blog/posts/git7/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/git7/</guid><description>&lt;p>En este post veremos comandos que nos ayudaran a descargar ramas que se crearon en el repositorio remoto, tambi√©n veremos como fusionar ramas, como descargar los cambios que est√°n en el repo remoto pero que a√∫n no los tenemos en el repositorio local, etc&amp;hellip;üê§&lt;/p></description></item><item><title>Git y GitHub: Comandos (git clone, fork)</title><link>https://ulisesornelasr.github.io/my_blog/posts/git5/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/git5/</guid><description>&lt;p>A la hora de colaborar en un proyecto, tenemos diferentes opciones para comenzar a trabajar, en esta ocasi√≥n veremos cuando usar git clone y cuando hacer un fork del proyecto&amp;hellip;üê§&lt;/p></description></item><item><title>Git: Comandos (git reset, git reflog, git revert)</title><link>https://ulisesornelasr.github.io/my_blog/posts/git4/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/git4/</guid><description>&lt;p>&lt;em>Git reset&lt;/em> es un comando que nos ayuda a deshacer uno o varios commits con el fin de revertir sus efectos, &lt;em>git revert&lt;/em> tambi√©n puede ayudarnos con esta tarea, pero lo hace de una manera diferente. En este post revisaremos que comando deber√≠amos usar y otros comandos de ayuda&amp;hellip;üê§&lt;/p></description></item><item><title>Git: Comandos (git restore)</title><link>https://ulisesornelasr.github.io/my_blog/posts/git3/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/git3/</guid><description>&lt;p>Si lo quieres ahora es deshacer alg√∫n cambio, lo veremos en este post con algunos comandos que te pueden ayudar, cabe destacar que cada comando se usa para una cosa distinta&amp;hellip;üê§&lt;/p></description></item><item><title>Git: Comandos b√°sicos (git diff, git log, git show)</title><link>https://ulisesornelasr.github.io/my_blog/posts/gitbasic2/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/gitbasic2/</guid><description>&lt;p>En este post hablaremos acerca de comandos que nos servir√°n a la hora que no sabemos bien que cambios se hicieron, estaremos enfocados en comandos de Git que devuelven informaci√≥n&amp;hellip;üê£&lt;/p></description></item><item><title>Git: Comandos b√°sicos (git init, git status, git add, git commit, git push)</title><link>https://ulisesornelasr.github.io/my_blog/posts/gitbasic1/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/gitbasic1/</guid><description>&lt;p>Muy bien, ahora que ya conocemos un poquito de teor√≠a sobre c√≥mo funciona Git y GitHub, comenzaremos a usar los comandos b√°sicos&amp;hellip;üê£&lt;/p></description></item><item><title>Git y Github: Fundamentos</title><link>https://ulisesornelasr.github.io/my_blog/posts/gitygithub/</link><pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/gitygithub/</guid><description>&lt;p>En este post entender√°s que es Git y que es Github, aprender√°s cu√°les son sus diferencias y porque es tan importante utilizar estas dos herramientas si eres un desarrollador de software&amp;hellip;üíª&lt;/p></description></item><item><title>CSS: Diferencias entre REM y EM (medidas relativas)</title><link>https://ulisesornelasr.github.io/my_blog/posts/cssremem/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/cssremem/</guid><description>&lt;p>Personalmente durante mi aprendizaje en CSS, solamente usaba unidades de medida en px, esta es una unidad de medida absoluta, es decir, que ya est√° definida y no depende de ninguna otra, como por ejemplo:&lt;/p>
&lt;ul>
&lt;li>padding: 50px;&lt;/li>
&lt;li>margin-top: 20px; etc, etc&amp;hellip;&lt;/li>
&lt;/ul></description></item><item><title>CSS: Elementos de bloque y de l√≠nea</title><link>https://ulisesornelasr.github.io/my_blog/posts/inlineblock/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/inlineblock/</guid><description>&lt;p>En este post hablaremos sobre c√≥mo se clasifican las etiquetas o elementos HTML y c√≥mo podemos cambiar esta propiedad para darle el uso que necesitemos. üòâ&lt;/p></description></item><item><title>C√≥mo instalar NVM(Node Version Manager) en windows</title><link>https://ulisesornelasr.github.io/my_blog/posts/installnvm/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/installnvm/</guid><description>&lt;p>A continuaci√≥n te ense√±ar√© como puedes tener y utilizar una u otra versi√≥n de &lt;strong>Node&lt;/strong> en un mismo ambiente seg√∫n sea tu necesidad.üòâ&lt;/p></description></item><item><title>Deploy de mi webSite con GitHub Pages</title><link>https://ulisesornelasr.github.io/my_blog/posts/deploygithubpages/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/deploygithubpages/</guid><description>&lt;p>En nuestro post anterior vimos como pod√≠amos crear un webSite con Hugo, ahora veremos como hacer deploy de este sitio con GitHub Pages.&lt;/p></description></item><item><title>C√≥mo crear un sitio web con Go Hugo</title><link>https://ulisesornelasr.github.io/my_blog/posts/howtocreatesite/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://ulisesornelasr.github.io/my_blog/posts/howtocreatesite/</guid><description>&lt;p>Go Hugo es el framework m√°s r√°pido del mundo para crear sitios web, aqu√≠ te ense√±ar√© como t√∫ puedes hacerlo.&lt;/p></description></item></channel></rss>